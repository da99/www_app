
[
  {
    "it" : "entire applet stops for \"STOP APPLET\"",
    "input" : [
      1,2,3,
      "STOP APPLET", [],
      4,5,6
    ],
    "output" : [
      "stack should ==", [1,2,3]
    ]
  },

  {
    "it" : "puts String values on the stack",
    "input" : [
      "a", "b", "c"
    ],
    "output" : [
      "stack should ==", ["a","b","c"]
    ]
  },

  {
    "it" : "puts numeric values on the stack",
    "input" : [
      5, "a", 1.0
    ],
    "output" : [
      "stack should ==", [5, "a", 1.0]
    ]
  },


  {
    "it" : "raises Invalid if an Array has no preceding String",
    "input" : [
      "my comp", "is a computer", [
        [], [], "console print", [2]
      ],
      "my comp", []
    ],
    "output" : [
      "should raise", ["Invalid"],
      "message should match", ["Computer name not specified"]
    ]
  },

  {
    "it" : "runs a computer in its own fork",
    "input": [
      "my val", "is", [1],
      "my computer", "is a computer", [
        "my val", "is", [2],
        "print", [1, "get", ["my val"]]
      ]
    ],
    "output" : [
      "console should ==", ["[1, 2]"]
    ]
  },

  {
    "it" : "runs a local computer first.",
    "input" : [
      "yo", "is a computer", [ "print", ["yo yo"] ],
      "my func", "is a computer", [
         "yo", "is a computer", [ "print", ["hello"] ],
         "yo", []
      ],
      "my func", []
    ],
    "output" : [
      "last console message should ==", ["\"hello\""]
    ]
  },

  {
    "it" : "runs an a function from parent computer, if not found locally",
    "input" : [
      "top_func", "is a computer", [ "print", ["yo yo: from top"] ],
      "reg_func", "is a computer", [
         "top_func", []
      ],
      "reg_func", []
    ],
    "output" : [
      "last console message should ==", ["\"yo yo: from top\""]
    ]
  }

]
