#!/usr/bin/env bash
# -*- bash -*-
#
#
first_opt="$1"
set -u -e -o pipefail

if [[ "$first_opt" == "help" ]]; then

  echo ""
  echo "  # == examples: =="
  echo "  bin/test    # -> ruby tests"
  echo "  bin/test js # -> javascript tests"
  echo "  # ==============="
  exit 0
fi

if [[ "$first_opt" == "all" ]]; then
  bin/test
  exit 0
fi

cmd="bundle exec bacon specs/lib/helpers.rb"

# === Find file by partial file name.
file="$(echo specs/as_ruby/*-${first_opt}.rb)"
if [[ -f "$file" ]]; then
  shift
  $cmd $file "$@"
  exit 0
fi

# === Run all ruby and js files in proper order.
jshint lib/public/www_app.js
jshint specs/client-side/*.js
files="$( echo specs/as_ruby/*.rb | tr ' ' "\n" | sort)"
if [[ -z "$files" ]]; then
  colorize yellow "No tests found." 1>&2
  exit 0
else
  $cmd $files "$@"
fi




# ==== Not needed right now.
# if [[ "$first_opt" == "js" ]]; then
  # shift
  # files="$(find specs/as_javascript -maxdepth 1 -type f -iname "*.js" -and -not -iname "helpers.js")"
  # if [[ -z "$files" ]]; then
    # colorize yellow "No tests found." 1>&2
    # exit 0
  # else
    # mocha -R spec $files "$@"
  # fi
  # exit 0
# fi
