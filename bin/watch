#!/usr/bin/env bash
# -*- bash -*-
#
#
orig="$@"
set -u -e -o pipefail

stop_server() {
  if [[ -f "playground/tmp/thin.pid" ]]; then
    echo ""
    echo "=== Stopping server"
    bin/server stop
  fi
}
trap 'stop_server' SIGINT

if [[ ! -f "playground/tmp/thin.pid" ]]; then
  bin/server start
fi

www_app="$(pwd)"
echo ""
echo "=== Watching: "

# From: http://stackoverflow.com/questions/5947742/how-to-change-the-output-color-of-echo-in-linux
Color_Off='\e[0m'
BRed='\e[1;31m'
Red='\e[0;31m'
Green='\e[0;32m'
Orange='\e[0;33m'

log=/tmp/www_app/log.txt
if [[ -f $log ]]; then
  old_log="$(cat $log)"
else
  old_log=""
fi

IFS=$'\n'
re='^[0-9]+$'
inotifywait -q -m -e close_write,close --exclude .git/ -r .  | while read CHANGE
    do

      dir=$(echo "$CHANGE" | cut -d' ' -f 1)
      op=$(echo "$CHANGE" | cut -d' ' -f 2)
      file=$(echo "$CHANGE" | cut -d' ' -f 3)
      path="${dir}$file"

      if [[ "$op" == "MODIFY" && $file == "log.txt"  ]]; then
        new_log="$(cat $log)"
        output=${new_log/"$old_log"}
        for i in $output; do
          code="$(echo "$i" | cut -d' ' -f9 || echo '')"
          if [[ ! -z "$code" && "$code" =~ $re ]]; then
            if [[ "$code" -gt 199 && "$code" -lt 300 ]]; then
              color="$Green"
            fi
            if [[ "$code" -gt 299 && "$code" -lt 400 ]]; then
              color="$Orange"
            fi
            if [[ "$code" -gt 399 && "$code" -lt 500 ]]; then
              color="$Red"
            fi
            if [[ "$code" -gt 499 ]]; then
              color="$BRed"
            fi
            echo -e "${color}$i${Color_Off}"
          else
            if [[ ! ( "$i" == *ruby* ) ]]; then
              if [[ "$i" =~ ':in ' ]]; then
                echo -e "${Red}$i${Color_Off}"
              else
                echo -e "$i"
              fi
            fi
          fi
        done
        old_log="$new_log"
      fi

      if [[ ( ! "$op" =~ "NOWRITE" ) && ( "$op" =~ "CLOSE" || "$op" =~ "WRITE" )  && ! -z "$file" ]]
      then
        echo ""
        echo "$op: $path"

        if [[ "$(readlink -f $path)" == "$(readlink -f $0)" ]]; then
          echo "=== Restarting this script"
          exec $0 $orig
        fi

        if [[ -d playground/tmp ]]; then
          if [[ ( $file == *.ru* || $file == *.rb* ) ]]; then
            if [[ -f playground/tmp/thin.pid ]]; then
              bin/server restart
            else
              bin/server start
            fi
          fi


          if [[ $path != *playground* && $dir == *public* && $file == *.js*  ]]; then
            dest="playground/Public/www_app-$(cat VERSION)/$file"
            hints=""
            if [[ "$file" == "www_app.js" ]]; then
              jshint $path || hints="false"
            fi

            if [[ -z "$hints" ]]; then
              cp $path $dest
              echo "=== copied to: $(pwd)/$dest"
            fi
          else
            echo "=== ignored"
          fi

        fi
      fi

    done


